// import React, { useState, useEffect } from "react";
// import uploadLogo from "../../../../../static/icons/Vector.png";
// import arrow from "../../../../../static/icons/Arrow 15.png";
// import { useDispatch } from "react-redux";
// import { uploadFeaturedTalent } from "../../../../../Redux/FeaturedTalentSlice";
// import "../FeaturedTalent.scss";

// function FeaturedUpload() {
//   const [talentData, setTalentData] = useState({
//     name: "",
//     title: "",
//     pictureUrl: "",
//     profileUrl: "",
//   });

//   const [pictureFile, setPictureFile] = useState(null);
//   const [profileFile, setProfileFile] = useState(null);

//   const dispatch = useDispatch();

//   const handleInputChange = (e) => {
//     const { name, value } = e.target;
//     setTalentData({ ...talentData, [name]: value });
//   };

//   const handlePictureFileChange = (e) => {
//     setPictureFile(e.target.files[0]);
//   };

//   const handleProfileFileChange = (e) => {
//     setProfileFile(e.target.files[0]);
//   };

//   const handleSubmit = async (e) => {
//     e.preventDefault();

//     // Validate form data (optional)
//     if (!talentData.name || !talentData.title || !pictureFile || !profileFile) {
//       // Handle validation errors (e.g., display error messages)
//       return;
//     }

//     // Create FormData objects to send files
//     const formDataPicture = new FormData();
//     formDataPicture.append("picture", pictureFile);

//     const formDataProfile = new FormData();
//     formDataProfile.append("profile", profileFile);

//     // Upload files and get URLs
//     const pictureUrl = await uploadFile(formDataPicture);
//     const profileUrl = await uploadFile(formDataProfile);

//     // Update talent data with URLs
//     const updatedTalentData = {
//       ...talentData,
//       pictureUrl,
//       profileUrl,
//     };

//     // Dispatch action to upload talent data
//     dispatch(uploadFeaturedTalent(updatedTalentData));
//   };

//   // Helper function to upload a file and get the URL
//   const uploadFile = async (formData) => {
//     try {
//       const response = await fetch(
//         `${import.meta.env.VITE_BASE_URL}/talents/featured`,
//         {
//           method: "POST",
//           headers: {
//             "x-nxg-header": import.meta.env.VITE_SECRET_KEY,
//             Authorization: token?.token,
//           },
//           body: formData,
//         }
//       );

//       const data = await response.json();
//       return data.url;
//     } catch (error) {
//       console.error("Error uploading file:", error);
//       return null;
//     }
//   };

//   return (
//     <div className="post-featured-talents container">
//       <h2>
//         <b>Add Featured Talent</b>
//       </h2>
//       <form className="talentInfor" onSubmit={handleSubmit}>
//         <div className="talentName">
//           <label htmlFor="talent-name">
//             <b>Talent Name:</b>
//           </label>
//           <input
//             className="NameInput"
//             type="text"
//             value={talentData.name}
//             onChange={handleInputChange}
//             name="name"
//             required
//           />
//         </div>
//         <div className="talentName">
//           <label htmlFor="talent-name">
//             <b>Talent Title:</b>
//           </label>
//           <input
//             className="NameInput"
//             type="text"
//             value={talentData.title}
//             onChange={handleInputChange}
//             name="title"
//             required
//           />
//         </div>

//         <div className="uploadfile">
//           <div className="pictureUpload">
//             <label htmlFor="">
//               <b>Upload Talent Picture:</b>
//             </label>

//             <div className="upload-container">
//               <input
//                 type="file"
//                 className="uploadInput"
//                 onChange={handlePictureFileChange}
//                 required
//               />
//               <div className="text">
//                 Browsers Files Here{" "}
//                 <span className="subtext">Drag and drop files here</span>
//               </div>
//             </div>

//             <div className="placeholderImg">
//               <img src={uploadLogo} alt="" />
//             </div>
//           </div>

//           <div className="profileUpload">
//             <label htmlFor="" className="profName">
//               <b> Upload Talents Profile:</b>
//             </label>
//             <div className="upload-container">
//               <input
//                 type="file"
//                 className="uploadInput"
//                 onChange={handleProfileFileChange}
//                 required
//               />
//               <div className="text">
//                 Browsers Files Here{" "}
//                 <span className="subtext">Drag and drop files here</span>
//               </div>
//             </div>
//             <div className="placeholderlogo">
//               <img src={uploadLogo} alt="" />
//             </div>
//           </div>
//         </div>

//         <div className="uploadButton">
//           <button type="submit">Upload</button>
//         </div>
//       </form>
//       <div className="arrow">
//         <div className="arrowImg">
//           <img src={arrow} alt="" />
//         </div>
//         <h4>
//           <b>Back</b>
//         </h4>
//       </div>
//     </div>
//   );
// }

// export default FeaturedUpload;

import React, { useState } from "react";
import uploadLogo from "../../../../../static/icons/Vector.png";
import arrow from "../../../../../static/icons/Arrow 15.png";
import "../FeaturedTalent.scss";
import { API_HOST_URL } from "../../../../../utils/api/API_HOST";

function FeaturedUpload() {
  const [talentName, setTalentName] = useState("");
  // const [talentTitle, setTalentTitle] = useState("");
  const [talentProfilePic, setTalentProfilePic] = useState(null);
  const [talentResume, setTalentResume] = useState(null);

  const handleTalentNameChange = (event) => {
    setTalentName(event.target.value);
  };

  // const handleTalentTitleChange = (event) => {
  //   setTalentTitle(event.target.value);
  // };

  const handleTalentPictureChange = (event) => {
    const file = event.target.files[0];
    if (file && file.type.startsWith("image/")) {
      setTalentProfilePic(file);
    } else {
      alert("Please upload an image file (e.g., JPG, PNG).");
    }
  };

  const handleTalentResumeChange = (event) => {
    const file = event.target.files[0];
    if (file && file.type.startsWith("application/pdf")) {
      setTalentResume(file);
    } else {
      alert("Please upload a PDF file.");
    }
  };

  const handleSubmit = async (event) => {
    event.preventDefault();

    // Validate input fields
    if (!talentName || !talentProfilePic || !talentResume) {
      alert("Please fill in all required fields.");
      return;
    }

    try {
      // Prepare form data for multipart/form-data requests (replace if needed)
      const formData = new FormData();
      formData.append("name", talentName);
      // formData.append("title", talentTitle);
      formData.append("picture", talentProfilePic);
      formData.append("resume", talentResume);

      const talentResponse = await fetch(
        `${API_HOST_URL}/api/talents/featured`,
        {
          method: "POST",
          body: formData,
          headers: {
            "Content-Type": "multipart/form-data",
          },
        }
      );

      const talentResult = await talentResponse.json();

      if (talentResult.success) {
        alert("Talent details submitted successfully!");
        // Clear form fields or redirect as needed
      } else {
        alert(
          "Error submitting talent details:",
          talentResult.message || "An error occurred."
        ); // Provide more specific error message if available
      }
    } catch (error) {
      console.error("Error submitting talent details:", error);
      alert("An error occurred. Please try again later.");
    }
  };

  return (
    <div className="post-featured-talents container">
      <h2>
        <b>Add Featured Talent</b>
      </h2>
      <form className="talentInfor" onSubmit={handleSubmit}>
        <div className="talentName">
          <label htmlFor="talent-name">
            <b>Talent Name:</b>
          </label>
          <input
            className="NameInput"
            type="text"
            onChange={handleTalentNameChange}
          />
        </div>
        {/* <div className="talentName">
          <label htmlFor="talent-name">
            <b>Talent Title:</b>
          </label>
          <input className="NameInput" type="text" />
        </div> */}

        <div className="uploadfile">
          <div className="pictureUpload">
            <label htmlFor="">
              <b>Upload Talent Picture:</b>
            </label>

            <div className="upload-container">
              <input
                type="file"
                className="uploadInput"
                onChange={handleTalentPictureChange}
              />
              <div className="text">
                Browsers Files Here{" "}
                <span className="subtext">Drag and drop files here</span>
              </div>
            </div>

            <div className="placeholderImg">
              <img src={uploadLogo} alt="" />
            </div>
          </div>

          <div className="profileUpload">
            <label htmlFor="" className="profName">
              <b> Upload Talents Resume:</b>
            </label>
            <div className="upload-container">
              <input
                type="file"
                className="uploadInput"
                onChange={handleTalentResumeChange}
              />
              <div className="text">
                Browsers Files Here{" "}
                <span className="subtext">Drag and drop files here</span>
              </div>
            </div>
            <div className="placeholderlogo">
              <img src={uploadLogo} alt="" />
            </div>
          </div>
        </div>

        <div className="uploadButton">
          <button type="submit">Upload</button>
        </div>
      </form>
      <div className="arrow">
        <div className="arrowImg">
          <img src={arrow} alt="" />
        </div>
        <h4>
          <b>Back</b>
        </h4>
      </div>
    </div>
  );
}

export default FeaturedUpload;
